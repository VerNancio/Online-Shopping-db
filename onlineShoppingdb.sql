DROP DATABASE IF EXISTS onlineShopping;

CREATE DATABASE onlineShopping;

CREATE TABLE IF NOT EXISTS `User` (
	userId INT UNSIGNED NOT NULL AUTO_INCREMENT,
    name VARCHAR(45) NOT NULL,
    phoneNum VARCHAR(20) NOT NULL,
    last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
   
    PRIMARY KEY (userId)
);

CREATE TABLE IF NOT EXISTS `Buyer` (
    buyerId SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
	userId INT UNSIGNED NOT NULL,
    last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    KEY (userId),
    
    CONSTRAINT fk_buyer_user FOREIGN KEY (userId) REFERENCES `User` (userId) ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `Seller` (
    sellerId SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
	userId INT UNSIGNED NOT NULL,
    last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    KEY (userId),
    
    CONSTRAINT fk_seller_user FOREIGN KEY (userId) REFERENCES `User` (userId) ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `BankCard` (
	cardNumber CHAR(19) NOT NULL,
    userId INT UNSIGNED NOT NULL,
    expiryDate DATE NOT NULL,
    bank VARCHAR(15) NOT NULL,
    last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    PRIMARY KEY (cardNumber),
    KEY (userId),
    
    CONSTRAINT fk_bankcard_user FOREIGN KEY (userId) REFERENCES `User` (userId) ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `CreditCard` (
    creditId INT UNSIGNED NOT NULL AUTO_INCREMENT,
	bankId INT UNSIGNED NOT NULL,
    organization VARCHAR(15) NOT NULL,
    last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    KEY(bankId),
    
    CONSTRAINT fk_creditcard_bankcard FOREIGN KEY (bankId) REFERENCES `BankCard` (bankId) ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `DebitCard` (
    debitId INT UNSIGNED NOT NULL AUTO_INCREMENT,
	bankId INT UNSIGNED NOT NULL,
    last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    KEY(bankId),
    
    CONSTRAINT fk_debitcard_bankcard FOREIGN KEY (bankId) REFERENCES `BankCard` (bankId) ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `Store` (
	sid TINYINT UNSIGNED NOT NULL AUTO_INCREMENT,
    name VARCHAR(45) NOT NULL,
    startTime DATE DEFAULT CURRENT_DATE NOT NULL,
    customerGrade VARCHAR(45) NOT NULL, -- REVER
    streetAddr VARCHAR(45) NOT NULL,
    province VARCHAR(45) NOT NULL,
    city VARCHAR(45) NOT NULL,
    last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    PRIMARY KEY (sid)
);

-- CREATE TABLE IF NOT EXISTS `Brand` (
--     brandId SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
--     brandName VARCHAR(45) NOT NULL
-- );

CREATE TABLE IF NOT EXISTS `Product` (
	pid INT UNSIGNED NOT NULL AUTO_INCREMENT,
    sid TINYINT UNSIGNED NOT NULL,
    brand VARCHAR(45) NOT NULL,
    name VARCHAR(45) NOT NULL,
    type VARCHAR(45) NOT NULL,
    amount DECIMAL(5,2) NOT NULL, -- REVER
    price DECIMAL(5,2) NOT NULL, -- REVER
    colour VARCHAR(25) NOT NULL,
    customerReview INT UNSIGNED NOT NULL, -- FK DO COMMENTS
    modelNumber VARCHAR(25) NOT NULL,
    last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    PRIMARY KEY (pid),
    KEY (sid),
    
    CONSTRAINT fk_product_store FOREIGN KEY (sid) REFERENCES `Store` (sid) ON DELETE RESTRICT ON UPDATE CASCADE 
);

CREATE TABLE IF NOT EXISTS `OrderItem` (
	itemId INT UNSIGNED NOT NULL AUTO_INCREMENT,
    pid INT UNSIGNED NOT NULL,
    price DECIMAL(5,2) NOT NULL, -- REVER
    creationTime DATE NOT NULL,
    last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    PRIMARY KEY (itemId),
    KEY (pid),
    
    CONSTRAINT fk_orderitem_product FOREIGN KEY (pid) REFERENCES `Product` (pid) ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `Order` (
	orderNumber INT UNSIGNED NOT NULL AUTO_INCREMENT,
    itemId INT UNSIGNED NOT NULL,
    creationTime DATE NOT NULL,
    paymentStatus ENUM('Unpaid', 'Paid') DEFAULT 'Unpaid' NOT NULL,
    totalAmount
);